@model AppoDoc.Models.MobUser

@{
    ViewBag.Title = "New Mobile User Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>New Mobile User Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.au_firstname, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.au_firstname, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.au_firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.au_lastname, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.au_lastname, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.au_lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.au_reg_phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.au_reg_phone, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.au_reg_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.au_email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.au_email, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.au_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.au_chart_no, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.au_chart_no, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.au_chart_no, "", new { @class = "text-danger" })
            </div>
        </div>

     

      

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">

                <input type="button" value="Clear All" class="btn btn-danger" />
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

